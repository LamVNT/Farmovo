@startuml Balance_Create_Sequence

skinparam backgroundColor white
skinparam sequenceArrowThickness 2
skinparam sequenceMessageAlign center
skinparam sequenceGroupBodyBackgroundColor #F8F9FA
skinparam sequenceParticipantBorderColor #6C757D
skinparam sequenceParticipantBackgroundColor #E9ECEF
skinparam sequenceLifeLineStroke dash

title Balance – Create From Stocktake Diff (Auto Only)

actor Staff
participant ":Detail StockTake Page" as DetailUI
participant ":Balance Create Page" as BalanceUI
participant ":SaleTransactionController" as SaleController
participant ":SaleTransactionServiceImpl" as SaleService
participant ":SaleTransactionMapper" as SaleMapper
participant ":ImportTransactionDetailRepository" as ImportDetailRepo

note over DetailUI
  Chỉ cho phép tạo phiếu cân bằng từ Stocktake đã COMPLETED
  và có chênh lệch (diff != 0), chưa có phiếu PCB trước đó.
  Không hỗ trợ tạo thủ công.
end note

== A. Validate điều kiện & Chuẩn bị dữ liệu ==
Staff -> DetailUI: Nhấn "Tạo Phiếu Cân bằng"
activate Staff
activate DetailUI
DetailUI -> DetailUI: check canBalance(status, diff, hasBalance)

alt Không đủ điều kiện (status!=COMPLETED | diff==0 | hasBalance==true)
  DetailUI --> Staff: Hiển thị thông báo, không cho tạo
  deactivate DetailUI
  deactivate Staff
else Đủ điều kiện
  DetailUI -> DetailUI: build CreateSaleTransactionRequestDto (prefilled)
  note right of DetailUI
    - Map diff → detail (List<ProductSaleResponseDto>)
    - totalAmount = Σ(unitSalePrice × quantity)
    - status = WAITING_FOR_APPROVE
    - saleTransactionNote = "Cân bằng kho"
    - stocktakeId, storeId được set theo Detail
  end note
  DetailUI -> BalanceUI: Điều hướng /sale/balance/{stocktakeId} + state: Prefilled DTO
  deactivate DetailUI
end

== B. Hiển thị form Cân bằng (prefilled) ==
activate BalanceUI
BalanceUI --> Staff: Hiển thị form đã fill sẵn (khóa Store, Sản phẩm, SL, Tổng tiền, Ghi chú, Trạng thái)
note right of BalanceUI
  Chỉ cho phép chọn Khách hàng (Customer)
end note

== C. Lưu phiếu Cân bằng ==
Staff -> BalanceUI: Chọn Customer và Nhấn "Lưu"
BalanceUI -> SaleController: POST /api/sale-transactions/save-from-balance {CreateSaleTransactionRequestDto + customerId}
activate SaleController
SaleController -> SaleService: save(dto, userId)
activate SaleService

SaleService -> SaleService: getNextBalanceSaleTransactionCode()
SaleService -> ImportDetailRepo: validateBatchesAndQuantities()
activate ImportDetailRepo
ImportDetailRepo --> SaleService: OK
deactivate ImportDetailRepo

SaleService -> SaleMapper: toEntity(dto)
activate SaleMapper
SaleMapper --> SaleService: SaleTransaction Entity
deactivate SaleMapper

SaleService -> SaleService: persist SaleTransaction (WAITING_FOR_APPROVE)
SaleService --> SaleController: SaleTransactionResponse
deactivate SaleService

SaleController --> BalanceUI: 200 OK
BalanceUI --> Staff: Hiển thị "Tạo thành công" + điều hướng sang danh sách PCB

deactivate SaleController
deactivate BalanceUI
deactivate Staff

@enduml
