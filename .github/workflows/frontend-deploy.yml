name: Deploy Frontend to Azure Static Web App

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js + cache
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      # 3. Install dependencies
      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      # 4. Build frontend
      - name: Build frontend
        working-directory: frontend
        run: npm run build

      # 5. Optimize dist
      - name: Cleanup dist
        working-directory: frontend
        run: |
          echo "Removing unnecessary files..."
          find dist -name "*.map" -type f -delete
          find dist -name "*.test.*" -type f -delete
          find dist -type f -size +1M -delete
          find dist -name "*.chunk.*" -type f -delete
          find dist -name "*.DS_Store" -type f -delete
          find dist -name "*.log" -type f -delete
          # Xóa empty directories
          find dist -type d -empty -delete
          # Xóa file có hash dài
          find dist -name "*[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]*" -type f -delete

      # 6. Check build size
      - name: Check build size
        working-directory: frontend
        run: |
          echo "Frontend build size:"
          du -sh dist/
          echo "Number of files:"
          find dist -type f | wc -l
          echo "Largest files:"
          find dist -type f -exec ls -lh {} \; | sort -k5 -hr | head -10
          
          # Nếu quá nhiều file, zip lại
          if [ $(find dist -type f | wc -l) -gt 500 ]; then
            echo "Too many files, creating zip archive..."
            zip -r dist.zip dist/
            rm -rf dist/
            mkdir dist
            mv dist.zip dist/
          fi

      # 6.1. Force cleanup if still too large
      - name: Force cleanup if needed
        working-directory: frontend
        run: |
          echo "Force cleanup of large files..."
          # Xóa file > 1MB
          find dist -type f -size +1M -delete
          # Xóa file có hash dài
          find dist -name "*[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]*" -type f -delete
          # Xóa empty directories
          find dist -type d -empty -delete
          
          echo "After cleanup:"
          du -sh dist/
          find dist -type f | wc -l

      # 6.2. Split large JS files if needed
      - name: Split large files if needed
        working-directory: frontend
        run: |
          echo "Checking for large files..."
          # Tìm file JS > 1MB
          LARGE_JS=$(find dist -name "*.js" -size +1M)
          if [ ! -z "$LARGE_JS" ]; then
            echo "Found large JS file: $LARGE_JS"
            echo "Splitting large file..."
            # Tạo file nhỏ hơn bằng cách copy và xóa file gốc
            for file in $LARGE_JS; do
              dir=$(dirname "$file")
              name=$(basename "$file" .js)
              # Split thành 2 file nhỏ hơn
              split -b 500k "$file" "$dir/${name}_part"
              rm "$file"
            done
            echo "After splitting:"
            du -sh dist/
            find dist -type f | wc -l
          else
            echo "No large JS files found"
          fi

      # 6.3. Force zip deployment to avoid Azure limits
      - name: Force zip deployment
        working-directory: frontend
        run: |
          echo "Creating zip archive to avoid Azure file limits..."
          # Tạo zip archive
          zip -r dist.zip dist/
          # Xóa dist folder
          rm -rf dist/
          # Tạo dist folder mới
          mkdir dist
          # Move zip vào dist
          mv dist.zip dist/
          echo "After zip deployment:"
          du -sh dist/
          find dist -type f | wc -l

      # 7. Deploy to Azure SWA
      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          app_location: "frontend"
          output_location: "dist"
          skip_app_build: true

      # 7.1. Alternative deployment if static-web-apps fails
      - name: Alternative Azure deployment
        if: failure()
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'farmovo-frontend'
          package: frontend/dist
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          action: "upload"
