@startuml ForgotPassword_Class_Diagram

!theme plain
skinparam backgroundColor #FFFFFF
skinparam class {
    BackgroundColor #F8F9FA
    BorderColor #6C757D
    ArrowColor #495057
    FontColor #212529
}

title **Forgot Password - Class Diagram**

' ======================== DTO ========================
package "DTO" {
  class OtpRequest {
    - otp: String
  }

  class ChangePassword {
    - password: String
    - repeatPassword: String
  }

  class MailBody {
    - to: String
    - subject: String
    - text: String
  }

  class OtpVerificationResponse {
    - success: Boolean
    - message: String
    - errorType: String
    --
    + success(message: String): OtpVerificationResponse
    + error(message: String, errorType: String): OtpVerificationResponse
  }
}

' ======================== Service ========================
package "Service" {
  interface ForgotPasswordService {
    +verifyOtp(otp: Integer, email: String): String
  }
  
  class ForgotPasswordServiceImpl {
    -forgotPasswordRepository: ForgotPasswordRepository
    -userRepository: UserRepository
    --
    +verifyOtp(otp: Integer, email: String): String
  }

  class EmailServiceImpl {
    -javaMailSender: JavaMailSender
    --
    +sendSimpleMessage(mailBody: MailBody): void
  }
}

' ======================== Repository ========================
package "Repository" {
  interface UserRepository {
    +findByEmail(email: String): Optional<User>
    +updatePassword(email: String, password: String): void
  }

  interface ForgotPasswordRepository {
    +findByOtpAndUser(otp: Integer, user: User): Optional<ForgotPassword>
    +deleteByUserId(userId: Long): void
    +delete(fp: ForgotPassword): void
    +save(fp: ForgotPassword): ForgotPassword
  }
}

' ======================== Controller ========================
package "Controller" {
  class ForgotPasswordController {
    -userRepository: UserRepository
    -emailService: EmailServiceImpl
    -forgotPasswordRepository: ForgotPasswordRepository
    -passwordEncoder: PasswordEncoder
    -forgotPasswordService: ForgotPasswordService
    -otpValidator: OtpValidator
    --
    +verifyMail(email: String): ResponseEntity<Object>
    +verifyOtp(email: String, request: OtpRequest): ResponseEntity<OtpVerificationResponse>
    +changePasswordHadler(changePassword: ChangePassword, email: String): ResponseEntity<String>
    -otpGenerator(): Integer
  }
}

' ======================== Validator ========================
package "Validator" {
  class OtpValidator {
    +validateOtp(request: OtpRequest): ValidationResult
  }

  class PasswordValidator {
    +validatePassword(password: String): PasswordValidationResult
  }

  class ValidationResult {
    -valid: Boolean
    -errorMessage: String
    -errorType: String
    --
    +isValid(): Boolean
    +getErrorMessage(): String
    +getErrorType(): String
  }

  class PasswordValidationResult {
    -valid: Boolean
    -errorMessage: String
    --
    +isValid(): Boolean
    +getErrorMessage(): String
  }
}

' ======================== Entity ========================
package "Entity" {
  abstract class Base {
    #createdAt: LocalDateTime
    #createdBy: Long
    #updatedAt: LocalDateTime
    #deletedAt: LocalDateTime
    #deletedBy: Long
  }
  
  class User {
    - id: Long
    - fullName: String
    - username: String
    - password: String
    - email: String
    - phone: String
    - status: Boolean
    - store: Store
    - authorities: List<Authority>
    - forgotPassword: ForgotPassword
  }

  class ForgotPassword {
    - id: Long
    - otp: Integer
    - expirationTime: Date
    - user: User
  }
}

' ======================== Relationships ========================

' Entity relationships
User --|> Base
ForgotPassword --|> Base
User ||--o| ForgotPassword : has

' Controller relationships
ForgotPasswordController --> UserRepository : uses
ForgotPasswordController --> EmailServiceImpl : uses
ForgotPasswordController --> ForgotPasswordRepository : uses
ForgotPasswordController --> ForgotPasswordService : uses
ForgotPasswordController --> OtpValidator : uses

' Service relationships
ForgotPasswordServiceImpl ..|> ForgotPasswordService : implements
ForgotPasswordServiceImpl --> ForgotPasswordRepository : uses
ForgotPasswordServiceImpl --> UserRepository : uses

' Repository relationships
UserRepository --> User : manages
ForgotPasswordRepository --> ForgotPassword : manages

' DTO relationships
ForgotPasswordController --> OtpRequest : uses
ForgotPasswordController --> ChangePassword : uses
ForgotPasswordController --> MailBody : uses
ForgotPasswordController --> OtpVerificationResponse : returns
EmailServiceImpl --> MailBody : uses

' Validator relationships
OtpValidator --> ValidationResult : returns
PasswordValidator --> PasswordValidationResult : returns
ForgotPasswordController --> PasswordValidator : uses

@enduml



