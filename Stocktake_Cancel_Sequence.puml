@startuml Stocktake_Cancel_Sequence

skinparam backgroundColor white
skinparam sequenceArrowThickness 2
skinparam sequenceMessageAlign center
skinparam sequenceGroupBodyBackgroundColor #F8F9FA
skinparam sequenceParticipantBorderColor #6C757D
skinparam sequenceParticipantBackgroundColor #E9ECEF
skinparam sequenceLifeLineStroke dash

title Cancel StockTake - Sequence Diagram

actor Staff
participant "StockTake Page" as UI
participant ":StocktakeController" as CC
participant ":StocktakeServiceImpl" as CS
participant ":StocktakeRepository" as CR
participant ":StocktakeMapper" as CM
database "Database" as DB

Staff -> UI : Nhấn 'Hủy kiểm kê'
UI -> CC : PUT /api/stocktakes/{id}/cancel
activate CC
CC -> CS : cancelStocktake(id)
activate CS
CS -> CR : findById(id)
activate CR
CR -> DB : SELECT * FROM stocktakes WHERE id = ?
DB --> CR : return Stocktake or null
CR --> CS : return Optional<Stocktake>
deactivate CR
alt Stocktake Not Found
    CS -> CS : throw new StocktakeNotFoundException(...)
    CS --> CC : return StocktakeNotFoundException
    CC --> UI : return 404 Not Found {error message}
    UI --> Staff : return error
else Stocktake Found
    CS -> CS : check status == DRAFT or INPROGRESS
    alt Status Not Valid
        CS --> CC : return InvalidStatusException
        CC --> UI : return 400 Bad Request {error message}
        UI --> Staff : return error
    else Status Valid
        CS -> CS : setStatus(CANCELLED), setUpdatedAt
        CS -> CR : save(stocktake)
        activate CR
        CR -> DB : UPDATE stocktakes SET status=CANCELLED WHERE id=?
        DB --> CR : return updated stocktake
        CR --> CS : return Stocktake entity
        deactivate CR
        CS -> CM : toResponseDto(stocktake)
        activate CM
        CM --> CS : return StocktakeResponseDto
        deactivate CM
        CS --> CC : return StocktakeResponseDto
        CC --> UI : return 200 OK StocktakeResponseDto
        UI --> Staff : return StocktakeResponseDto
    end
end
deactivate CS
deactivate CC
@enduml 