@startuml Stocktake_Update_With_Complete_Status

skinparam backgroundColor white
skinparam sequenceArrowThickness 2
skinparam sequenceMessageAlign center
skinparam sequenceGroupBodyBackgroundColor #F8F9FA
skinparam sequenceParticipantBorderColor #6C757D
skinparam sequenceParticipantBackgroundColor #E9ECEF
skinparam sequenceLifeLineStroke dash
skinparam actorBackgroundColor #FFD700

title Update StockTake – With COMPLETED Status

actor User
participant ":StockTake Page" as UI
participant ":Edit StockTake UI" as EditUI
participant ":StocktakeController" as Controller
participant ":StocktakeService" as Service
participant ":ProductRepository" as ProductRepo
participant ":ZoneRepository" as ZoneRepo
participant ":StocktakeValidator" as Validator
participant ":StocktakeMapper" as Mapper
participant ":StocktakeRepository" as Repo
participant ":InventoryService" as InventoryService

== A. Load dữ liệu kiểm kê ==
group A. Lấy thông tin Stocktake

User -> UI: Nhấn "Cập nhật" phiếu kiểm kê
activate User
activate UI

UI -> Controller: GET /api/stocktakes/{id}
activate Controller
Controller -> Service: getStocktake(id)
activate Service
Service -> Repo: findById(id)
activate Repo
Repo --> Service: Optional<Stocktake>
deactivate Repo

alt Stocktake Not Found
    Service --> Controller: throw StocktakeNotFoundException
    Controller --> UI: 404 Not Found
    UI --> User: Hiển thị lỗi
    deactivate Service
    deactivate Controller
    deactivate UI
else Stocktake Found
    Service -> Mapper: toResponseDto(stocktake)
    Mapper --> Service: StocktakeResponseDto
    Service --> Controller: StocktakeResponseDto
    deactivate Service
    Controller --> UI: 200 OK
    deactivate Controller
    UI -> EditUI: Chuyển đến Edit Stocktake Page
    deactivate UI
    activate EditUI
end
end group

group B. Load danh sách sản phẩm & khu vực

EditUI -> Service: fetchProducts(storeId)
activate Service
Service -> ProductRepo: findByStoreId(storeId)
ProductRepo --> Service: List<ProductDTO>
Service --> EditUI: List<ProductDTO>
deactivate Service

EditUI -> Service: fetchZones(storeId)
activate Service
Service -> ZoneRepo: findByStoreId(storeId)
ZoneRepo --> Service: List<ZoneDTO>
Service --> EditUI: List<ZoneDTO>
deactivate Service

EditUI --> User: Hiển thị form cập nhật kiểm kê
end group

== C. Gửi cập nhật phiếu kiểm kê ==
group C. Submit cập nhật (DRAFT hoặc COMPLETED)

User -> EditUI: Nhập thông tin, nhấn "Hoàn thành" hoặc "Draft"
EditUI -> Controller: PUT /api/stocktakes/{id} {requestDto, status}
activate Controller

Controller -> Validator: validate(requestDto)
Validator --> Controller: Validation OK
deactivate Validator

alt Validation Failed
    Controller --> EditUI: 400 Bad Request
    EditUI --> User: Hiển thị lỗi
else Validation Passed
    Controller -> Service: updateStockTake(id, requestDto, status)
    activate Service

    Service -> Repo: findById(id)
    activate Repo
    Repo --> Service: Optional<Stocktake>
    deactivate Repo

    alt Not Found
        Service --> Controller: throw StocktakeNotFoundException
        Controller --> EditUI: 404 Not Found
        EditUI --> User: Hiển thị lỗi
    else Found
        Service -> Stocktake: cập nhật các trường từ requestDto
        Service -> Repo: save(stocktake)
        activate Repo

        alt Save Failed
            Repo --> Service: throw SaveException
            Service --> Controller: 500 Internal Server Error
            Controller --> EditUI: 500 Internal Server Error
            EditUI --> User: Hiển thị lỗi
        else Save Success
            Repo --> Service: Stocktake entity
            deactivate Repo

            '=== Nếu status là COMPLETED, cập nhật tồn kho ===
            alt status == COMPLETED
                Service -> InventoryService: updateInventoryFromStocktake(stocktake)
                activate InventoryService

                alt Update Inventory Failed
                    InventoryService --> Service: throw InventoryException
                    Service --> Controller: 500 Inventory Update Error
                    Controller --> EditUI: 500 Internal Server Error
                    EditUI --> User: Hiển thị lỗi cập nhật tồn kho
                else Success
                    InventoryService --> Service: OK
                end
                deactivate InventoryService
            end

            Service -> Mapper: toResponseDto(stocktake)
            Mapper --> Service: StocktakeResponseDto
            Service --> Controller: StocktakeResponseDto
            deactivate Service

            Controller --> EditUI: 200 OK StocktakeResponseDto
            EditUI --> User: Hiển thị kết quả cập nhật thành công
        end
    end
end
deactivate Controller
deactivate EditUI
deactivate User

note right of EditUI
    requestDto gồm: stocktakeDate,\ndetail, note, storeId, status\nstatus = DRAFT | COMPLETED
end note

@enduml
