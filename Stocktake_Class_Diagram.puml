@startuml Stocktake_Class_Diagram_Optimized
skinparam backgroundColor white
skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam classFontSize 12
skinparam classFontName Arial
skinparam classBackgroundColor #F8F9FA
skinparam classBorderColor #6C757D
skinparam arrowColor #495057
skinparam packageStyle rectangle
skinparam ranksep 20
skinparam nodesep 15
top to bottom direction

' ===== BASE =====
package "Base" {
    abstract class Base {
        - createdAt : LocalDateTime
        - createdBy : Long
        - updatedAt : LocalDateTime
        - deletedAt : LocalDateTime
        - deletedBy : Long
    }
}

' ===== CONTROLLER =====
package "Controller" {
    class StocktakeController {
        - stocktakeService : StocktakeService
        + getAllStocktakes() : ResponseEntity<List<StocktakeResponseDto>>
        + createStocktake(requestDto : StocktakeRequestDto) : ResponseEntity<StocktakeResponseDto>
        + updateStocktake(id : Long, requestDto : StocktakeRequestDto) : ResponseEntity<StocktakeResponseDto>
        + getStocktakeDetails(id : Long) : ResponseEntity<List<StocktakeDetailDto>>
    }
}

' ===== SERVICE =====
package "Service" {
    interface StocktakeService {
        + getAllStocktakes() : List<StocktakeResponseDto>
        + createStocktake(requestDto : StocktakeRequestDto) : StocktakeResponseDto
        + updateStocktake(id : Long, requestDto : StocktakeRequestDto) : StocktakeResponseDto
        + getStocktakeDetails(id : Long) : List<StocktakeDetailDto>
    }

    class StocktakeServiceImpl {
        - stocktakeRepository : StocktakeRepository
        - stocktakeMapper : StocktakeMapper
        - stocktakeValidator : StocktakeValidator
        + getAllStocktakes() : List<StocktakeResponseDto>
        + createStocktake(requestDto : StocktakeRequestDto) : StocktakeResponseDto
        + updateStocktake(id : Long, requestDto : StocktakeRequestDto) : StocktakeResponseDto
        + getStocktakeDetails(id : Long) : List<StocktakeDetailDto>
    }

    StocktakeService <|.. StocktakeServiceImpl
}

' ===== MAPPER =====
package "Mapper" {
    interface StocktakeMapper {
        + toEntity(requestDto : StocktakeRequestDto) : Stocktake
        + toResponseDto(stocktake : Stocktake) : StocktakeResponseDto
        + toDetailDto(detail : String) : List<StocktakeDetailDto>
    }
}

' ===== REPOSITORY =====
package "Repository" {
    interface StocktakeRepository {
        + findById(id : Long) : Optional<Stocktake>
        + save(stocktake : Stocktake) : Stocktake
    }
}

' ===== VALIDATOR =====
package "Validator" {
    class StocktakeValidator {
        + validate(requestDto : StocktakeRequestDto, details : List<StocktakeDetail>) : ValidationResult
    }

    class ValidationResult {
        - success : boolean
        - message : String
        + isSuccess() : boolean
        + getMessage() : String
    }
}

' ===== DTO & POJO =====
package "DTO & POJO" {
    class StocktakeRequestDto {
        - stocktakeDate : Instant
        - detail : String
        - stocktakeNote : String
        - storeId : Long
    }

    class StocktakeResponseDto {
        - id : Long
        - stocktakeDate : Instant
        - detail : String
        - stocktakeNote : String
        - status : StocktakeStatus
        - store : Store
    }

    class StocktakeDetailDto {
        - productId : Long
        - zones_id : List<Long>
        - remain : Integer
        - real : Integer
        - diff : Integer
        - note : String
    }

    class StocktakeDetail {
        - productId : Long
        - zones_id : List<Long>
        - remain : Integer
        - real : Integer
        - diff : Integer
        - note : String
    }
}

' ===== ENUM =====
package "Enum" {
    enum StocktakeStatus {
        DRAFT
        COMPLETED
        CANCELLED
    }
}

' ===== ENTITY =====
package "Entity" {
    class Stocktake {
        - id : Long
        - stocktakeDate : Instant
        - detail : String
        - stocktakeNote : String
        - status : StocktakeStatus
        - store : Store
    }

    class Store {
        - id : Long
        - storeName : String
        - storeDescription : String
        - storeAddress : String
        - products : List<Product>
        - stocktakes : List<Stocktake>
    }

    class Product {
        - id : Long
        - productName : String
        - productDescription : String
    }

    class Zone {
        - id : Long
        - zoneName : String
        - zoneDescription : String
    }

    Base <|-- Stocktake
    Base <|-- Store
    Base <|-- Product
    Base <|-- Zone
}

' ===== RELATIONSHIPS =====
StocktakeController --> StocktakeService
StocktakeServiceImpl --> StocktakeRepository
StocktakeServiceImpl --> StocktakeMapper
StocktakeServiceImpl --> StocktakeValidator

StocktakeMapper --> Stocktake
StocktakeMapper --> StocktakeRequestDto
StocktakeMapper --> StocktakeResponseDto
StocktakeMapper --> StocktakeDetailDto
StocktakeMapper --> StocktakeDetail

StocktakeValidator --> StocktakeRequestDto
StocktakeValidator --> ValidationResult

Stocktake o-- Store
Store o-- Product
Store o-- Stocktake
Stocktake *-- StocktakeDetail
StocktakeDetail o-- Zone
Stocktake --> StocktakeStatus

@enduml
