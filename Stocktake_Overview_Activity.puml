@startuml Stocktake_Overview_Activity

skinparam backgroundColor white
skinparam activity {
	StartColor #28a745
	BarColor #6C757D
	ArrowColor #495057
	DiamondBackgroundColor #F8F9FA
	DiamondBorderColor #6C757D
	BorderColor #6C757D
	BackgroundColor #FFFFFF
}
skinparam legendBackgroundColor #F8F9FA
skinparam legendBorderColor #6C757D
skinparam shadowing false

title Stocktake – Tổng quan luồng hoạt động (Happy/Bad Case + DB tương tác)

partition "Frontend (UI)" {
	start
	:Chọn cửa hàng, Zone, sản phẩm cần kiểm kê;
	:Nhập số thực tế (real), ghi chú;
	:Nhấn Lưu (Tạo/Update);
}

partition "Stocktake API (Controller/Service)" {
	if (POST /api/stocktakes) then (Tạo mới)
		:validate detail bắt buộc;
		if (detail rỗng/null?) then (Bad)
			#red:HTTP 400 – "detail is required";
			stop
		else (OK)
			:save Stocktake (status = DRAFT);
		endif
	else (PUT /api/stocktakes/{id})
		:load Stocktake theo id;
		if (không tìm thấy?) then (Bad)
			#red:HTTP 404 – Not Found;
			stop
		else (Tồn tại)
			if (status hiện tại == COMPLETED hoặc CANCELLED) then (Bad)
				#red:400 – "Không thể chỉnh sửa phiếu đã hoàn thành hoặc đã hủy!";
				stop
			else (Cho phép)
				:validate & cập nhật detail, note, store;
				:save thay đổi;
			endif
		endif
	endif
}

partition "Frontend (UI)" {
	:Người dùng bấm Hoàn tất kiểm kê;
}

partition "Stocktake API (Controller/Service)" {
	:PUT /api/stocktakes/{id}/status?status=COMPLETED;
	:Chuyển trạng thái -> COMPLETED;
	note right
	- Không cập nhật lô ngay tại bước này
	- Diff (chênh lệch) được tính ở màn hình/hoặc API báo cáo
	end note
}

partition "Frontend (UI) – Tạo Phiếu Cân bằng từ chênh lệch" {
	:Ở trang chi tiết Stocktake, nếu status==COMPLETED
	và diff != 0 -> Hiện nút "Tạo Phiếu Cân bằng";
	if (Điều kiện không đạt? \nstatus!=COMPLETED | diff==0 | đã có PCB) then (Bad)
		#orange:Chặn thao tác, hiển thị thông báo;
		detach
	else (Đạt)
		:Map diff -> CreateSaleTransactionRequestDto \n(status=WAITING_FOR_APPROVE, note="Cân bằng kho", stocktakeId);
		:Điều hướng sang màn hình tạo PCB (prefilled);
	endif
}

partition "SaleTransaction API (Service)" {
	:POST /api/sale-transactions (tạo PCB);
	:Đặt mã PCBxxxxxx, status=WAITING_FOR_APPROVE;
	:save SaleTransaction;
	:Người duyệt bấm Hoàn thành (Complete);
	if (Trạng thái không phải DRAFT/WAITING_FOR_APPROVE?) then (Bad)
		#red:400 – "Chỉ hoàn thành từ DRAFT hoặc WAITING_FOR_APPROVE";
		stop
	else (Hợp lệ)
		:Parse detail JSON -> List<ProductSaleResponseDto>;
		:Trừ tồn lô (ImportTransactionDetail.remainQuantity);
		:Trừ tồn sản phẩm (Product.totalRemain...);
		if (Là phiếu cân bằng? \n(note chứa "Cân bằng kho" hoặc stocktakeId != null)) then (Yes)
			:Cập nhật Zone thực tế (zones_id) theo ZoneReal;
			:Đánh dấu isCheck=true cho các lô liên quan;
		endif
		:Đổi trạng thái -> COMPLETE; save;
	endif
}

partition "DB" {
	note as N1
	Bảng tương tác chính:
	- stocktakes
	- sale_transactions (có stocktake_id)
	- import_transaction_details (remainQuantity, zones_id, isCheck)
	- products (tồn kho tổng)
	- stores, customers, users (tham chiếu)
	end note
}

stop

legend right
== Happy Case ==
- Tạo/Update hợp lệ -> COMPLETED Stocktake
- Tạo PCB từ diff -> COMPLETE PCB
- Cập nhật tồn kho & Zone/isCheck

== Bad Case ==
- Thiếu detail -> 400
- Sửa phiếu đã COMPLETE/CANCEL -> 400
- Complete sai trạng thái -> 400
- Không đủ điều kiện tạo PCB -> UI chặn
end legend

@enduml 